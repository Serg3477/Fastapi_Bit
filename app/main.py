from fastapi import FastAPI, Request
from fastapi.templating import Jinja2Templates
from contextlib import asynccontextmanager
from starlette.middleware.sessions import SessionMiddleware
from fastapi.staticfiles import StaticFiles
from app.core.init_db import create_history_database


from app.core import settings
from app.core import init_db
from app.api import active_router
from app.api import users_router
from app.middleware.sessions import template_context_processor


# üëá lifespan: –∑–∞–º–µ–Ω–∞ on_event("startup") –≠—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, Base.metadata.create_all),
# –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–∏–º —Å–µ—Ä–≤–∏—Å–∞–º, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–π, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, –∏ —Ç.–¥.
@asynccontextmanager
async def lifespan(app: FastAPI):
    await init_db()
    create_history_database()
    yield
    # –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å shutdown-–ª–æ–≥–∏–∫—É

app = FastAPI(
    title="FastAPI Altcoins",
    lifespan=lifespan
)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(active_router)
app.include_router(users_router)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∞—Ç–∏–∫—É –∏ —à–∞–±–ª–æ–Ω—ã
app.mount("/static", StaticFiles(directory="app/static"), name="static")
app.mount("/static/Images", StaticFiles(directory="app/static/Images"), name="images")
app.mount("/Avatars", StaticFiles(directory="Avatars"), name="avatars")
app.mount("/js", StaticFiles(directory="app/js"), name="js")
templates = Jinja2Templates(directory="app/templates")

# –ü–æ–¥–∫–ª—é—á–∞–µ–º middleware –¥–ª—è —Å–µ—Å—Å–∏–π
app.add_middleware(SessionMiddleware, secret_key=settings.SECRET_KEY)

# –î–æ–±–∞–≤–ª—è–µ—Ç template_context_processor –∫–∞–∫ –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ Jinja2.
templates.env.globals["template_context_processor"] = template_context_processor




